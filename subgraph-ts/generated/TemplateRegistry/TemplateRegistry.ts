// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class TemplatedAccepted extends ethereum.Event {
  get params(): TemplatedAccepted__Params {
    return new TemplatedAccepted__Params(this);
  }
}

export class TemplatedAccepted__Params {
  _event: TemplatedAccepted;

  constructor(event: TemplatedAccepted) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get nftContractAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get acceptedTimestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TemplatedRemoved extends ethereum.Event {
  get params(): TemplatedRemoved__Params {
    return new TemplatedRemoved__Params(this);
  }
}

export class TemplatedRemoved__Params {
  _event: TemplatedRemoved;

  constructor(event: TemplatedRemoved) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get nftContractAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get acceptedTimestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TemplateRegistry__acceptedTemplatesResult {
  value0: BigInt;
  value1: Address;
  value2: BigInt;
  value3: boolean;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: BigInt,
    value3: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    return map;
  }

  getTokenId(): BigInt {
    return this.value0;
  }

  getNftContractAddress(): Address {
    return this.value1;
  }

  getAcceptedTimestamp(): BigInt {
    return this.value2;
  }

  getIsActive(): boolean {
    return this.value3;
  }
}

export class TemplateRegistry extends ethereum.SmartContract {
  static bind(address: Address): TemplateRegistry {
    return new TemplateRegistry("TemplateRegistry", address);
  }

  acceptedTemplates(
    param0: Address,
    param1: BigInt
  ): TemplateRegistry__acceptedTemplatesResult {
    let result = super.call(
      "acceptedTemplates",
      "acceptedTemplates(address,uint256):(uint256,address,uint256,bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new TemplateRegistry__acceptedTemplatesResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toBoolean()
    );
  }

  try_acceptedTemplates(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<TemplateRegistry__acceptedTemplatesResult> {
    let result = super.tryCall(
      "acceptedTemplates",
      "acceptedTemplates(address,uint256):(uint256,address,uint256,bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new TemplateRegistry__acceptedTemplatesResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toBoolean()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddTemplateCall extends ethereum.Call {
  get inputs(): AddTemplateCall__Inputs {
    return new AddTemplateCall__Inputs(this);
  }

  get outputs(): AddTemplateCall__Outputs {
    return new AddTemplateCall__Outputs(this);
  }
}

export class AddTemplateCall__Inputs {
  _call: AddTemplateCall;

  constructor(call: AddTemplateCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _nftContractAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddTemplateCall__Outputs {
  _call: AddTemplateCall;

  constructor(call: AddTemplateCall) {
    this._call = call;
  }
}

export class RemoveTemplateCall extends ethereum.Call {
  get inputs(): RemoveTemplateCall__Inputs {
    return new RemoveTemplateCall__Inputs(this);
  }

  get outputs(): RemoveTemplateCall__Outputs {
    return new RemoveTemplateCall__Outputs(this);
  }
}

export class RemoveTemplateCall__Inputs {
  _call: RemoveTemplateCall;

  constructor(call: RemoveTemplateCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _nftContractAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveTemplateCall__Outputs {
  _call: RemoveTemplateCall;

  constructor(call: RemoveTemplateCall) {
    this._call = call;
  }
}
